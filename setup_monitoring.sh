#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É KavaCRM

set -e

DOMAIN="yourdomain.com"
TELEGRAM_BOT_TOKEN="your-telegram-bot-token"
TELEGRAM_CHAT_ID="your-telegram-chat-id"
HEALTHCHECK_URL="your-healthcheck-url"

echo "üìä –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –¥–ª—è KavaCRM"

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
sudo apt update
sudo apt install -y python3-psutil python3-requests curl jq

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –ª–æ–≥—ñ–≤
echo "üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –ª–æ–≥—ñ–≤..."
sudo mkdir -p /var/log/kavacrm
sudo chown -R $USER:$USER /var/log/kavacrm

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Å–∏—Å—Ç–µ–º–∏
echo "üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Å–∏—Å—Ç–µ–º–∏..."
sudo tee /usr/local/bin/kavacrm-monitor.sh > /dev/null <<EOF
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É KavaCRM
DOMAIN="$DOMAIN"
TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN"
TELEGRAM_CHAT_ID="$TELEGRAM_CHAT_ID"
HEALTHCHECK_URL="$HEALTHCHECK_URL"

LOG_FILE="/var/log/kavacrm/monitor.log"

# –§—É–Ω–∫—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log_message() {
    echo "\$(date '+%Y-%m-%d %H:%M:%S') - \$1" >> \$LOG_FILE
}

# –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram
send_telegram() {
    local message="\$1"
    local level="\${2:-info}"
    
    local emoji="‚ÑπÔ∏è"
    case \$level in
        "warning") emoji="‚ö†Ô∏è" ;;
        "error") emoji="‚ùå" ;;
        "critical") emoji="üö®" ;;
        "success") emoji="‚úÖ" ;;
    esac
    
    local formatted_message="\$emoji <b>KavaCRM Monitor</b>\n\n\$message"
    
    curl -s -X POST "https://api.telegram.org/bot\$TELEGRAM_BOT_TOKEN/sendMessage" \\
        -d chat_id="\$TELEGRAM_CHAT_ID" \\
        -d text="\$formatted_message" \\
        -d parse_mode="HTML" > /dev/null
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–∞–π—Ç—É
check_website() {
    local response=\$(curl -s -o /dev/null -w "%{http_code}" "https://\$DOMAIN/health/")
    
    if [ "\$response" = "200" ]; then
        log_message "Website health check: OK"
        return 0
    else
        log_message "Website health check: FAILED (HTTP \$response)"
        send_telegram "üåê –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π!\n\nHTTP –∫–æ–¥: \$response\n–î–æ–º–µ–Ω: \$DOMAIN" "critical"
        return 1
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—Ä—É
check_disk_space() {
    local usage=\$(df / | awk 'NR==2 {print \$5}' | sed 's/%//')
    
    if [ "\$usage" -gt 90 ]; then
        log_message "Disk space warning: \$usage% used"
        send_telegram "üíæ –ö—Ä–∏—Ç–∏—á–Ω–æ –º–∞–ª–æ –º—ñ—Å—Ü—è –Ω–∞ –¥–∏—Å–∫—É!\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: \$usage%" "critical"
        return 1
    elif [ "\$usage" -gt 80 ]; then
        log_message "Disk space warning: \$usage% used"
        send_telegram "üíæ –ú–∞–ª–æ –º—ñ—Å—Ü—è –Ω–∞ –¥–∏—Å–∫—É\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: \$usage%" "warning"
        return 0
    else
        log_message "Disk space: OK (\$usage% used)"
        return 0
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞–º'—è—Ç—ñ
check_memory() {
    local usage=\$(free | awk 'NR==2{printf "%.0f", \$3*100/\$2}')
    
    if [ "\$usage" -gt 90 ]; then
        log_message "Memory warning: \$usage% used"
        send_telegram "üß† –ö—Ä–∏—Ç–∏—á–Ω–æ –≤–∏—Å–æ–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ!\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: \$usage%" "critical"
        return 1
    elif [ "\$usage" -gt 80 ]; then
        log_message "Memory warning: \$usage% used"
        send_telegram "üß† –í–∏—Å–æ–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: \$usage%" "warning"
        return 0
    else
        log_message "Memory: OK (\$usage% used)"
        return 0
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤ Django
check_django_processes() {
    local processes=\$(pgrep -f "manage.py runserver" | wc -l)
    
    if [ "\$processes" -eq 0 ]; then
        log_message "Django processes: NOT RUNNING"
        send_telegram "üêç Django —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–∞—Ü—é—î!\n\n–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤" "critical"
        return 1
    else
        log_message "Django processes: OK (\$processes processes)"
        return 0
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
check_database() {
    local response=\$(curl -s "https://\$DOMAIN/health/" | jq -r '.checks.database.status' 2>/dev/null)
    
    if [ "\$response" = "healthy" ]; then
        log_message "Database: OK"
        return 0
    else
        log_message "Database: FAILED"
        send_telegram "üóÑÔ∏è –ü—Ä–æ–±–ª–µ–º–∞ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö!\n\n–°—Ç–∞—Ç—É—Å: \$response" "critical"
        return 1
    fi
}

# Ping healthcheck.io
ping_healthcheck() {
    if [ -n "\$HEALTHCHECK_URL" ]; then
        curl -s "\$HEALTHCHECK_URL" > /dev/null
        log_message "Healthcheck ping: OK"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
main() {
    log_message "Starting monitoring check..."
    
    local failed_checks=0
    
    check_website || ((failed_checks++))
    check_disk_space || ((failed_checks++))
    check_memory || ((failed_checks++))
    check_django_processes || ((failed_checks++))
    check_database || ((failed_checks++))
    ping_healthcheck
    
    if [ "\$failed_checks" -eq 0 ]; then
        log_message "All checks passed"
    else
        log_message "Failed checks: \$failed_checks"
    fi
    
    log_message "Monitoring check completed"
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
main
EOF

sudo chmod +x /usr/local/bin/kavacrm-monitor.sh

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd —Å–µ—Ä–≤—ñ—Å—É –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
echo "‚öôÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd —Å–µ—Ä–≤—ñ—Å—É –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É..."
sudo tee /etc/systemd/system/kavacrm-monitor.service > /dev/null <<EOF
[Unit]
Description=KavaCRM System Monitor
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/kavacrm-monitor.sh
User=$USER
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
echo "‚è∞ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd —Ç–∞–π–º–µ—Ä–∞..."
sudo tee /etc/systemd/system/kavacrm-monitor.timer > /dev/null <<EOF
[Unit]
Description=Run KavaCRM Monitor every 5 minutes
Requires=kavacrm-monitor.service

[Timer]
OnBootSec=5min
OnUnitActiveSec=5min

[Install]
WantedBy=timers.target
EOF

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è cron –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É
echo "üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è cron –∑–∞–≤–¥–∞–Ω–Ω—è..."
(crontab -l 2>/dev/null; echo "0 8 * * * curl -s https://$DOMAIN/health/detailed/ | jq -r '.application_stats' | /usr/local/bin/kavacrm-monitor.sh") | crontab -

# –ê–∫—Ç–∏–≤–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
sudo systemctl daemon-reload
sudo systemctl enable kavacrm-monitor.timer
sudo systemctl start kavacrm-monitor.timer

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
echo "üß™ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞..."
sudo tee /usr/local/bin/test-monitoring.sh > /dev/null <<EOF
#!/bin/bash

echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É KavaCRM"
echo "=================================="

echo "1. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è health check..."
curl -s "https://$DOMAIN/health/" | jq '.'

echo -e "\n2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ health check..."
curl -s "https://$DOMAIN/health/detailed/" | jq '.'

echo -e "\n3. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Telegram –±–æ—Ç–∞..."
/usr/local/bin/kavacrm-monitor.sh

echo -e "\n4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤..."
tail -10 /var/log/kavacrm/monitor.log

echo -e "\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
EOF

sudo chmod +x /usr/local/bin/test-monitoring.sh

echo "‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìä Health check –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∞ –∞–¥—Ä–µ—Å–æ—é: https://$DOMAIN/health/"
echo "üìà –î–µ—Ç–∞–ª—å–Ω–∏–π health check: https://$DOMAIN/health/detailed/"
echo "‚è∞ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω"
echo "üìù –õ–æ–≥–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤: /var/log/kavacrm/monitor.log"
echo ""
echo "–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:"
echo "  –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è: sudo /usr/local/bin/test-monitoring.sh"
echo "  –†—É—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞: sudo /usr/local/bin/kavacrm-monitor.sh"
echo "  –°—Ç–∞—Ç—É—Å —Ç–∞–π–º–µ—Ä–∞: sudo systemctl status kavacrm-monitor.timer"
echo "  –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤: sudo journalctl -u kavacrm-monitor.service"
